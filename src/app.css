/**
 * @ai-context GLOBAL_STYLES - Application-wide CSS styles and themes
 * @ai-dependencies Tailwind CSS, CSS Custom Properties
 * @ai-sideEffects Applies global styles, theme variables, and accessibility features
 * @ai-exports CSS layers, custom properties, component styles
 */

/* ===== ENHANCED CASCADE LAYERS ===== */
/* Define layer order for predictable specificity */
@layer reset, base, tokens, components, patterns, utilities, overrides;

/* Import Tailwind base styles */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Cache bust - v4 - Modern CSS Features with Accessibility */

@layer base {
	/* ===== MODERN ACCESSIBILITY & CONTRAST SUPPORT ===== */
	/* Replace deprecated -ms-high-contrast with modern prefers-contrast */
	@media (prefers-contrast: high) {
		:root {
			/* Enhanced contrast colors for accessibility */
			--text-base: #000000;
			--text-hover: #000000;
			--highlight: #000000;
			--border: #000000;
			--bg-base: #ffffff;
			--card: #ffffff;
			--surface: #f5f5f5;
			--purple: #4c1d95; /* Darker purple for better contrast */
		}

		.dark {
			--text-base: #ffffff;
			--text-hover: #ffffff;
			--highlight: #ffffff;
			--border: #ffffff;
			--bg-base: #000000;
			--card: #111111;
			--surface: #222222;
			--purple: #a78bfa; /* Lighter purple for dark high contrast */
		}
	}

	/* Respect user's motion preferences */
	@media (prefers-reduced-motion: reduce) {
		*, *::before, *::after {
			animation-duration: 0.01ms !important;
			animation-iteration-count: 1 !important;
			transition-duration: 0.01ms !important;
		}
	}
	/* Define CSS variables for themes */
	:root {
		/* ===== SHOPLIT LIGHT THEME ===== */
		/* Clean light colors for light mode */
		--bg-base: #ffffff;
		--bg-gradient: #f8fafc;
		--card: #ffffff;
		--surface: #f1f5f9;

		/* Shoplit blue accent */
		--purple: #3b82f6;
		--purple-light: #93c5fd;
		--purple-hover: #2563eb;
		--purple-bg: rgba(59, 130, 246, 0.1);

		/* Light mode accent colors */
		--accent: #f0f9ff;
		--accent-hover: #e0f2fe;
		--success: #10b981;
		--warning: #f59e0b;
		--info: #3b82f6;
		--error: #ef4444;
		--error-hover: #dc2626;

		/* Light mode text colors */
		--text-base: #64748b;
		--text-hover: #475569;
		--highlight: #1e293b;
		--muted: #94a3b8;

		/* Light borders */
		--border: #e2e8f0;
		--separator: #f1f5f9;

		/* Light shadows */
		--shadow-card: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
		--shadow-themed-card: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
		--shadow-dropdown: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
		--shadow-glow: 0 0 15px rgba(59, 130, 246, 0.2);
		--shadow-button: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
	}

	.dark {
		/* ===== SHOPLIT DARK THEME - TRUE BLACK ===== */
		/* Pure black background like Shoplit */
		--bg-base: #000000;
		--bg-gradient: #000000;
		--card: #0f0f0f;
		--surface: #1a1a1a;

		/* Shoplit blue for dark theme */
		--purple: #3b82f6;
		--purple-light: #60a5fa;
		--purple-hover: #2563eb;
		--purple-bg: rgba(59, 130, 246, 0.15);

		/* Dark theme accent colors */
		--accent: #111111;
		--accent-hover: #1f1f1f;
		--success: #10b981;
		--warning: #f59e0b;
		--info: #3b82f6;
		--error: #ef4444;
		--error-hover: #dc2626;

		/* Dark theme text - bright white like Shoplit */
		--text-base: #ffffff;
		--text-hover: #ffffff;
		--highlight: #ffffff;
		--muted: #6b7280;

		/* Dark borders - very subtle */
		--border: #262626;
		--separator: #1a1a1a;

		/* Dark shadows for depth */
		--shadow-card: 0 1px 3px 0 rgba(0, 0, 0, 0.3);
		--shadow-themed-card: 0 4px 6px -1px rgba(0, 0, 0, 0.4);
		--shadow-dropdown: 0 10px 15px -3px rgba(0, 0, 0, 0.5);
		--shadow-glow: 0 0 20px rgba(59, 130, 246, 0.4);
		--shadow-button: 0 1px 2px 0 rgba(0, 0, 0, 0.3);
	}

	body {
		background: linear-gradient(to bottom, var(--bg-base), var(--bg-gradient));
		color: var(--text-base);
		min-height: 100vh;
		background-attachment: fixed;
		transition:
			background-color 0.3s ease,
			color 0.3s ease;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		color: var(--highlight);
	}
}

@layer components {
	/* ===== CONTAINER QUERIES ===== */
	/* Container definitions for responsive components */
	.container-queries {
		/* Fallback for Safari iOS < 16 */
		width: 100%;
		/* Modern browsers */
		@supports (container-type: inline-size) {
			container-type: inline-size;
		}
	}

	.sidebar-container {
		/* Fallback for Safari iOS < 16 */
		width: 100%;
		/* Modern browsers */
		@supports (container-type: inline-size) {
			container-type: inline-size;
		}
		/* Fallback for Safari iOS < 16 */
		@supports (container-name: sidebar) {
			container-name: sidebar;
		}
	}

	.card-grid-container {
		/* Fallback for Safari iOS < 16 */
		width: 100%;
		/* Modern browsers */
		@supports (container-type: inline-size) {
			container-type: inline-size;
		}
		/* Fallback for Safari iOS < 16 */
		@supports (container-name: card-grid) {
			container-name: card-grid;
		}
	}

	.chat-container {
		/* Fallback for Safari iOS < 16 */
		width: 100%;
		/* Modern browsers */
		@supports (container-type: inline-size) {
			container-type: inline-size;
		}
		/* Fallback for Safari iOS < 16 */
		@supports (container-name: chat) {
			container-name: chat;
		}
	}

	.file-grid-container {
		/* Fallback for Safari iOS < 16 */
		width: 100%;
		/* Modern browsers */
		@supports (container-type: inline-size) {
			container-type: inline-size;
		}
		/* Fallback for Safari iOS < 16 */
/* Removed duplicate width declaration */
		/* Modern browsers */
		@supports (container-name: file-grid) {
			container-name: file-grid;
		}
	}

	/* ===== BUTTON COMPONENTS WITH CSS NESTING ===== */
	.btn-primary {
		background-color: var(--purple);
		color: white;
		padding: 0.5rem 1rem;
		border-radius: 0.5rem;
		transition: all 300ms;
		box-shadow: var(--shadow-button);

		&:hover {
			background-color: var(--purple-hover);
		}

		&:focus {
			outline: 2px solid var(--purple);
			outline-offset: 2px;
			box-shadow: 0 0 0 2px var(--bg-base), 0 0 0 4px var(--purple);
		}

		&:disabled {
			opacity: 0.5;
			cursor: not-allowed;
		}
	}

	.btn-secondary {
		background-color: var(--surface);
		color: var(--text-hover);
		padding: 0.5rem 1rem;
		border-radius: 0.5rem;
		transition: all 300ms;
		box-shadow: var(--shadow-button);

		&:hover {
			background-color: var(--accent);
		}

		&:focus {
			outline: 2px solid var(--surface);
			outline-offset: 2px;
			box-shadow: 0 0 0 2px var(--bg-base), 0 0 0 4px var(--surface);
		}

		&:disabled {
			opacity: 0.5;
			cursor: not-allowed;
		}
	}

	/* ===== CARD COMPONENTS WITH CONTAINER QUERIES ===== */
	.card {
		background-color: var(--card);
		border-radius: 0.75rem;
		box-shadow: var(--shadow-card);
		padding: 1.5rem;
		border: 1px solid var(--border);
		-webkit-backdrop-filter: blur(8px);
		backdrop-filter: blur(8px);

		&:hover {
			box-shadow: var(--shadow-themed-card);
		}
	}

	.card-dark {
		background-color: var(--card);
		-webkit-backdrop-filter: blur(8px);
		backdrop-filter: blur(8px);
		border: 1px solid var(--border);
		border-radius: 0.75rem;
		padding: 1.5rem;
		box-shadow: var(--shadow-themed-card);
		opacity: 0.8;

		&:hover {
			opacity: 1;
			box-shadow: var(--shadow-glow);
		}
	}

	/* Responsive card layouts based on container size */
/* Fallback for Safari iOS < 16 */
@media (min-width: 300px) {
  .card-grid-container .card-adaptive {
    display: grid;
    grid-template-columns: repeat(1, minmax(0, 1fr));
    gap: 1rem;
  }
}
/* Modern browsers */
@supports (container-type: inline-size) {
  @container card-grid (min-width: 300px) {
		.card-adaptive {
			display: grid;
			grid-template-columns: repeat(1, minmax(0, 1fr));
			gap: 1rem;
		}
	}



	/* File grid responsive behavior */
	/* Fallback for Safari iOS < 16 */
	@media (max-width: 400px) {
		.file-grid-container .file-grid {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}
	}
	/* Modern browsers */
	@supports (container-type: inline-size) {
		@container file-grid (max-width: 400px) {
		.file-grid {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}

		.file-item {
			font-size: 0.75rem;
			padding: 0.5rem;
		}
	}

	@container file-grid (min-width: 600px) {
		.file-grid {
			grid-template-columns: repeat(4, minmax(0, 1fr));
		}
	}

	@container file-grid (min-width: 900px) {
		.file-grid {
			grid-template-columns: repeat(6, minmax(0, 1fr));
		}
	}

	/* Sidebar responsive behavior with container queries */
	@container sidebar (max-width: 250px) {
		.sidebar-item {
			font-size: 0.75rem;
			padding: 0.25rem 0.5rem;

			.sidebar-text {
				display: none;
			}

			.sidebar-icon {
				margin-left: auto;
				margin-right: auto;
			}
		}
	}

	@container sidebar (min-width: 300px) {
		.sidebar-item {
			font-size: 0.875rem;
			padding: 0.5rem 0.75rem;

			.sidebar-text {
				display: block;
			}
		}
	}

	/* Chat container responsive behavior */
	@container chat (max-width: 600px) {
		.chat-header {
			display: flex;
			flex-direction: column;
			gap: 0.5rem;

			.chat-actions {
				justify-content: center;
			}
		}

		.chat-sidebar {
			width: 100%;
		}

		.message-input {
			font-size: 0.875rem;
		}
	}

	@container chat (min-width: 700px) {
		.chat-header {
			display: flex;
			flex-direction: row;
			justify-content: space-between;
		}

		.chat-sidebar {
			width: 20rem;
		}
	}

	/* ===== FORM COMPONENTS WITH CSS NESTING ===== */
	.input {
		background-color: var(--surface);
		border: 1px solid var(--border);
		border-radius: 0.5rem;
		padding: 0.5rem 1rem;
		outline: none;
		transition: all 0.15s ease-in-out;
		color: var(--text-hover);

		&:focus {
			box-shadow: 0 0 0 2px var(--purple);
			border-color: transparent;
		}

		&::placeholder {
			color: var(--text-hover);
			opacity: 0.7;
		}

		&:disabled {
			opacity: 0.5;
			cursor: not-allowed;
			background-color: var(--surface);
		}
	}

	.label {
		display: block;
		font-size: 0.875rem;
		font-weight: 500;
		color: var(--text-base);
		margin-bottom: 0.25rem;

		&.required::after {
			content: ' *';
			color: var(--error);
		}
	}

	.select {
		background-color: var(--surface);
		border: 1px solid var(--border);
		border-radius: 0.5rem;
		padding: 0.5rem 1rem;
		padding-right: 2rem;
		appearance: none;
		color: var(--text-hover);

		&:focus {
			box-shadow: 0 0 0 2px var(--purple);
			border-color: transparent;
		}

		&:disabled {
			opacity: 0.5;
			cursor: not-allowed;
		}
	}

	/* ===== NAVIGATION WITH CSS NESTING ===== */
	.nav-link {
		padding: 0.5rem 0.75rem;
		border-radius: 0.5rem;
		color: var(--text-base);
		transition: color 0.15s ease-in-out;

		&:hover {
			background-color: var(--surface);
			color: var(--text-hover);
		}

		&.active {
			background-color: var(--purple-bg);
			color: var(--purple);
			font-weight: 500;
		}

		&:focus {
			box-shadow: 0 0 0 2px var(--purple), 0 0 0 4px var(--bg-base);
		}
	}

	/* ===== TABLE COMPONENTS WITH CSS NESTING ===== */
	.table-container {
		overflow-x: auto;
		border-radius: 0.5rem;
		border: 1px solid var(--border);

		.table {
			min-width: 100%;
			border-collapse: separate;
			border-spacing: 0;
		}
	}

	.table-header {
		background-color: var(--surface);

		.table-header-cell {
			padding: 0.75rem 1.5rem;
			text-align: left;
			font-size: 0.75rem;
			font-weight: 500;
			color: var(--text-hover);
			text-transform: uppercase;
			letter-spacing: 0.05em;

			&:hover {
				background-color: var(--accent);
			}
		}
	}

	.table-body {
		background-color: var(--card);

		.table-row {
			transition: background-color 0.15s ease-in-out;
			border-top: 1px solid var(--separator);

			&:hover {
				background-color: var(--surface);
			}

			&.selected {
				background-color: var(--purple-bg);
			}
		}

		.table-cell {
			padding: 1rem 1.5rem;
			white-space: nowrap;
			font-size: 0.875rem;
			color: var(--text-hover);

			&.numeric {
				text-align: right;
				font-variant-numeric: tabular-nums;
			}

			&.actions {
				text-align: center;
			}
		}
	}

	/* ===== KEYBOARD INDICATOR ===== */
	.kbd {
		padding: 0.25rem 0.5rem;
		font-size: 0.75rem;
		font-weight: 600;
		color: var(--text-hover);
		background-color: var(--surface);
		border: 1px solid var(--border);
		border-radius: 0.25rem;
		box-shadow: 0 2px 0 0 var(--border);
		font-family: ui-monospace, monospace;
	}
}

/* Custom gradients */
.bg-gradient-dark {
	background: radial-gradient(
		circle at top left,
		var(--tw-gradient-from) 0%,
		var(--tw-gradient-to) 100%
	);
}

.bg-gradient-card {
	background: linear-gradient(135deg, rgba(15, 15, 15, 0.9) 0%, rgba(0, 0, 0, 0.9) 100%);
	-webkit-backdrop-filter: blur(10px);
	backdrop-filter: blur(10px);
}

.dark .bg-gradient-card {
	background: linear-gradient(135deg, rgba(20, 20, 20, 0.9) 0%, rgba(5, 5, 5, 0.9) 100%);
	-webkit-backdrop-filter: blur(12px);
	backdrop-filter: blur(12px);
}

/* Enhanced purple hover effect */
.nav-button {
	color: var(--text-hover);
	font-weight: 500;
	padding: 0.5rem 0.75rem;
	border-radius: 0.375rem;
	transition:
		background-color 50ms ease-out,
		color 50ms ease-out;
}

.nav-button:hover {
	color: var(--highlight);
	background-color: var(--purple-bg);
}

/* Black theme enhancements */
.dark .nav-button:hover {
	background-color: rgba(139, 92, 246, 0.15);
	box-shadow: 0 0 10px rgba(139, 92, 246, 0.3);
}

/* Enhanced card effects for black theme */
.dark .card {
	border-color: rgba(255, 255, 255, 0.05);
}

.dark .card:hover {
	border-color: rgba(139, 92, 246, 0.3);
	box-shadow: 0 0 20px rgba(139, 92, 246, 0.1);
}

.dark .card-dark {
	background-color: rgba(15, 15, 15, 0.8);
	border-color: rgba(255, 255, 255, 0.08);
}

/* Enhanced input styling for black theme */
.dark .input {
	background-color: rgba(20, 20, 20, 0.8);
	border-color: rgba(255, 255, 255, 0.1);
}

.dark .input:focus {
	background-color: rgba(25, 25, 25, 0.9);
	border-color: var(--purple);
	box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
}

/* Menu item styles */
.menu-item {
	display: flex;
	align-items: center;
	gap: 0.75rem;
	padding: 0.5rem 0.75rem;
	border-radius: 0.375rem;
	color: var(--text-hover);
	cursor: pointer;
	transition:
		background-color 50ms ease-out,
		color 50ms ease-out;
}

.menu-item:hover {
	background-color: var(--purple-bg);
	color: var(--highlight);
}

.menu-item.active {
	background-color: var(--purple-bg);
	color: var(--highlight);
	border-left: 4px solid var(--purple);
	font-weight: 500;
}

.menu-item.danger:hover {
	background-color: var(--error);
	color: white;
}

.menu-item.special {
	color: var(--purple);
}

.menu-item.special:hover {
	background-color: var(--purple-hover);
	color: white;
}

/* Black theme menu enhancements */
.dark .menu-item:hover {
	background-color: rgba(139, 92, 246, 0.12);
}

.dark .menu-item.active {
	background-color: rgba(139, 92, 246, 0.18);
	box-shadow: inset 0 0 20px rgba(139, 92, 246, 0.1);
}

/* Separator */
.separator {
	border-top: 1px solid var(--separator);
}

/* AG Grid styling */
.ag-theme-material {
	--ag-background-color: var(--card);
	--ag-header-background-color: var(--surface);
	--ag-odd-row-background-color: var(--surface);
	--ag-row-hover-color: var(--purple-bg);
	--ag-selected-row-background-color: var(--accent);
	--ag-font-family: 'Inter', sans-serif;
	--ag-font-size: 14px;
	--ag-border-color: var(--border);
	--ag-row-border-color: var(--separator);
	--ag-cell-horizontal-border: var(--separator);
	--ag-header-foreground-color: var(--text-hover);
	--ag-foreground-color: var(--text-base);
	--ag-secondary-foreground-color: var(--muted);
	--ag-disabled-foreground-color: var(--muted);
	--ag-input-border-color: var(--border);
	--ag-input-focus-border-color: var(--purple);
	--ag-input-bg-color: var(--surface);
	--ag-input-text-color: var(--text-hover);
	--ag-range-selection-border-color: var(--purple);
	--ag-range-selection-background-color: var(--purple-bg);
}

/* Enhanced AG Grid dark mode styling */
.dark .ag-theme-material {
	--ag-row-hover-color: rgba(139, 92, 246, 0.15);
	--ag-selected-row-background-color: rgba(139, 92, 246, 0.2);
}

/* Button styles */
.btn {
	padding: 0.5rem 1rem;
	border-radius: 0.5rem;
	transition: all 0.3s ease-in-out;
	font-weight: 500;
}

.btn-primary {
	background-color: var(--purple);
	color: white;
	box-shadow: var(--shadow-button);
}

.btn-primary:hover {
	background-color: var(--purple-hover);
}

.btn-secondary {
	background-color: var(--surface);
	color: var(--text-hover);
	box-shadow: var(--shadow-button);
}

.btn-secondary:hover {
	background-color: var(--surface);
	opacity: 0.8;
}

.btn-error {
	background-color: var(--error);
	color: white;
	box-shadow: var(--shadow-button);
}

.btn-error:hover {
	background-color: var(--error-hover);
}

.btn-error:focus {
		box-shadow: 0 0 0 2px var(--error), 0 0 0 4px var(--bg-base);
	}
}

.btn-sm {
	padding: 0.375rem 0.75rem;
	font-size: 0.875rem;
}

.btn-lg {
	padding: 0.75rem 1.25rem;
	font-size: 1.125rem;
}

.btn-icon {
	padding: 0.5rem;
	border-radius: 50%;
}

.btn:disabled {
	opacity: 0.5;
	cursor: not-allowed;
}

/* Custom scrollbar for webkit browsers */
::-webkit-scrollbar {
	width: 10px;
	height: 10px;
}

::-webkit-scrollbar-track {
	background-color: var(--surface);
	opacity: 0.5;
	border-radius: 5px;
}

::-webkit-scrollbar-thumb {
	background-color: var(--purple);
	opacity: 0.5;
	border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
	background-color: var(--purple-hover);
	opacity: 0.8;
}

/* Dark mode scrollbar enhancement */
.dark ::-webkit-scrollbar-track {
	background: #0a0a0a;
}

.dark ::-webkit-scrollbar-thumb {
	background: #333333;
}

.dark ::-webkit-scrollbar-thumb:hover {
	background: #4a4a4a;
}

/* Smooth transitions for theme changes */
* {
	transition-property: background-color, border-color, color, fill, stroke;
	transition-duration: 200ms;
	transition-timing-function: ease-in-out;
}

/* Prevent transition on initial load */
.no-transition * {
	transition: none !important;
}

/* ===== VIEW TRANSITIONS API ===== */
/* Enable view transitions for smooth page navigation */
@keyframes fade {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}

/* Customize the default view transition */
::view-transition-old(root) {
	animation: slide-out 0.3s ease-out;
}

::view-transition-new(root) {
	animation: slide-in 0.3s ease-in;
}

/* Custom view transition for specific elements */
.page-transition {
/* Fallback for browsers without view-transition-name support */
@supports (view-transition-name: page) {
  view-transition-name: page-content;
}
/* Provide smooth transition fallback for unsupported browsers */
@supports not (view-transition-name: page) {
  transition: opacity 0.3s ease-in-out;
}
}

::view-transition-old(page-content) {
	animation: fade-out-scale 0.25s ease-out;
}

::view-transition-new(page-content) {
	animation: fade-in-scale 0.25s ease-in;
}

/* Modal transitions */
.modal-transition {
/* Fallback for browsers without view-transition support */
@supports (view-transition-name: modal) {
  view-transition-name: modal;
}
/* Provide smooth transition fallback */
@supports not (view-transition-name: modal) {
  transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
}
}

::view-transition-old(modal-content) {
	animation: modal-out 0.2s ease-out;
}

::view-transition-new(modal-content) {
	animation: modal-in 0.2s ease-in;
}

/* Define the animations */
@keyframes slide-out {
	from {
		transform: translateX(0);
		opacity: 1;
	}
	to {
		transform: translateX(-20px);
		opacity: 0;
	}
}

@keyframes slide-in {
	from {
		transform: translateX(20px);
		opacity: 0;
	}
	to {
		transform: translateX(0);
		opacity: 1;
	}
}

@keyframes fade-out-scale {
	from {
		transform: scale(1);
		opacity: 1;
	}
	to {
		transform: scale(0.95);
		opacity: 0;
	}
}

@keyframes fade-in-scale {
	from {
		transform: scale(1.05);
		opacity: 0;
	}
	to {
		transform: scale(1);
		opacity: 1;
	}
}

@keyframes modal-out {
	from {
		transform: scale(1);
		opacity: 1;
	}
	to {
		transform: scale(0.9);
		opacity: 0;
	}
}

@keyframes modal-in {
	from {
		transform: scale(1.1);
		opacity: 0;
	}
	to {
		transform: scale(1);
		opacity: 1;
	}
}

/* ===== BROWSER COMPATIBILITY & FALLBACKS ===== */
@layer overrides {
	/* Fallback for browsers without View Transitions support */
	@supports not (view-transition-name: none) {
		.page-transition {
			transition:
				transform 0.3s ease,
				opacity 0.3s ease;
		}

		.modal-transition {
			transition:
				transform 0.2s ease,
				opacity 0.2s ease;
		}
	}

	/* Fallback for browsers without Container Queries support */
	@supports not (container-type: inline-size) {
		.card-adaptive {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
			gap: 1rem;
		}

		.file-grid {
			display: grid;
			grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
		}

		@media (max-width: 640px) {
			.sidebar-item .sidebar-text {
				display: none;
			}

			.sidebar-item .sidebar-icon {
				margin-left: auto;
				margin-right: auto;
			}
		}
	}

	/* Fallback for browsers without color-mix() support */
	@supports not (color: color-mix(in srgb, red, blue)) {
		:root {
			--purple-light: #a78bfa;
			--purple-hover: #7c3aed;
			--purple-bg: rgba(139, 92, 246, 0.08);
			--accent: rgba(99, 102, 241, 0.1);
			--error-hover: #dc2626;
			--muted: #9ca3af;
			--border: #d1d5db;
			--separator: #e5e7eb;
		}

		.dark {
			--purple-light: #a78bfa;
			--purple-hover: #9333ea;
			--purple-bg: rgba(139, 92, 246, 0.12);
			--accent: rgba(99, 102, 241, 0.15);
			--error-hover: #dc2626;
			--muted: #a3a3a3;
			--border: #262626;
			--separator: #262626;
		}
	}

	/* Fallback for browsers without CSS Nesting support */
	@supports not (selector(&)) {
		.btn-primary:hover {
			background-color: var(--purple-hover);
		}

		.btn-primary:focus {
			box-shadow: 0 0 0 2px var(--purple), 0 0 0 4px var(--bg-base);
		}

		.input:focus {
			box-shadow: 0 0 0 2px var(--purple);
			border-color: transparent;
		}

		.nav-link:hover {
			background-color: var(--surface);
			color: var(--text-hover);
		}

		.nav-link.active {
			background-color: var(--purple-bg);
			color: var(--purple);
			font-weight: 500;
		}
	}
}
}