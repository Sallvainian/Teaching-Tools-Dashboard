name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
        
      - name: Upload ESLint results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: |
            eslint-output.txt
          if-no-files-found: ignore
          
      - name: Run TypeScript type checking
        run: npm run check
        
      - name: Run Svelte Check
        run: npm run check:svelte || true
        
      - name: Generate TypeScript coverage report
        run: |
          npx typescript-coverage-report || true
        continue-on-error: true

  # TODO: Add test job when test framework is configured
  # test:
  #   name: Run Tests
  #   runs-on: ubuntu-latest

  build:
    name: Build Project
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Validate TypeScript config files
        run: |
          echo "Validating TypeScript config files..."
          npx tsc --noEmit --project tsconfig.json
        
      - name: Test PostCSS and Tailwind via build process
        run: |
          echo "Testing PostCSS and Tailwind CSS via build process..."
          # The actual build process will test PostCSS and Tailwind integration
          # This validates that our postcss.config.ts works with the build system
          echo "PostCSS and Tailwind validation will happen during build step"
          
      - name: Build project
        run: npm run build
        
      - name: Validate build output and PostCSS/Tailwind processing
        run: |
          echo "Validating build output and CSS processing..."
          if [ ! -d ".svelte-kit" ]; then
            echo "Build failed: .svelte-kit directory not found"
            exit 1
          fi
          
          # Validate that CSS was generated (indicates PostCSS/Tailwind worked)
          if find .svelte-kit -name "*.css" | grep -q .; then
            echo "✅ CSS files generated successfully - PostCSS and Tailwind processing working"
            # Check if Tailwind utilities are present in generated CSS
            if find .svelte-kit -name "*.css" -exec grep -l "text-" {} \; | grep -q .; then
              echo "✅ Tailwind utilities found in generated CSS"
            else
              echo "⚠️  Warning: No Tailwind utilities found in CSS (may be unused/purged)"
            fi
          else
            echo "❌ ERROR: No CSS files found in build output - PostCSS/Tailwind compilation failed"
            exit 1
          fi
          
      - name: Test preview build
        run: |
          echo "Testing preview build..."
          timeout 30s npm run preview &
          PREVIEW_PID=$!
          sleep 10
          if ! kill -0 $PREVIEW_PID 2>/dev/null; then
            echo "Preview server failed to start"
            exit 1
          fi
          kill $PREVIEW_PID
          echo "Preview build test successful"
          
      - name: Check what build directories exist
        run: |
          echo "Checking build output directories..."
          ls -la
          echo "Contents of .svelte-kit (if exists):"
          ls -la .svelte-kit/ || echo ".svelte-kit directory not found"
          echo "Contents of build (if exists):"
          ls -la build/ || echo "build directory not found"
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            .svelte-kit/
          if-no-files-found: warn

  analyze-bundle:
    name: Analyze Bundle Size
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Analyze bundle
        run: |
          npm add -D vite-bundle-visualizer
          npm run build -- --mode analyze || true
        continue-on-error: true
        
      - name: Upload bundle analysis
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: |
            stats.html
            dist/stats.json
          if-no-files-found: ignore