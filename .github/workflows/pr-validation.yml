name: Pull Request Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  danger-checks:
    name: Danger Zone Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          
      - name: Check for dangerous patterns
        id: danger
        run: |
          echo "## 🚨 Danger Zone Checks" > danger-report.md
          FOUND_ISSUES=false
          
          # Check for hardcoded secrets
          echo "### Checking for hardcoded secrets..." >> danger-report.md
          if grep -rE "(api_key|apiKey|api_secret|password|token|secret)" --include="*.ts" --include="*.js" --include="*.svelte" src/ | grep -v "PUBLIC_" | grep -vE "(\.env|example|test|mock|fake)" ; then
            echo "⚠️ Potential hardcoded secrets found!" >> danger-report.md
            FOUND_ISSUES=true
          else
            echo "✅ No hardcoded secrets detected" >> danger-report.md
          fi
          
          # Check for console.log statements
          echo "### Checking for console.log statements..." >> danger-report.md
          CONSOLE_COUNT=$(grep -r "console\." src/ --include="*.ts" --include="*.svelte" | grep -v "console.error" | wc -l)
          if [ "$CONSOLE_COUNT" -gt 0 ]; then
            echo "⚠️ Found $CONSOLE_COUNT console statements" >> danger-report.md
            grep -rn "console\." src/ --include="*.ts" --include="*.svelte" | head -10 >> danger-report.md
            FOUND_ISSUES=true
          else
            echo "✅ No console statements found" >> danger-report.md
          fi
          
          # Check for commented out code
          echo "### Checking for commented out code..." >> danger-report.md
          COMMENT_COUNT=$(grep -rE "^[[:space:]]*//.*\{|^[[:space:]]*//.*function|^[[:space:]]*//.*class|/\*[\s\S]*?\*/" src/ --include="*.ts" --include="*.svelte" | wc -l)
          if [ "$COMMENT_COUNT" -gt 20 ]; then
            echo "⚠️ High amount of commented code detected ($COMMENT_COUNT lines)" >> danger-report.md
            FOUND_ISSUES=true
          else
            echo "✅ Acceptable amount of comments" >> danger-report.md
          fi
          
          echo "found_issues=$FOUND_ISSUES" >> $GITHUB_OUTPUT
          
      - name: Post danger report
        if: steps.danger.outputs.found_issues == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('danger-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

  validate-changes:
    name: Validate Code Changes
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base
          
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Analyze changes
        id: changes
        run: |
          cd pr
          
          echo "## 📊 Change Analysis" > change-report.md
          
          # Count changed files by type
          echo "### Files Changed:" >> change-report.md
          echo "- Svelte components: $(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -c "\.svelte$" || echo 0)" >> change-report.md
          echo "- TypeScript files: $(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -c "\.ts$" || echo 0)" >> change-report.md
          echo "- Test files: $(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -c "\.test\." || echo 0)" >> change-report.md
          
          # Check if tests were added/modified for changed files
          echo "### Test Coverage Check:" >> change-report.md
          CHANGED_SRC=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep "src/" | grep -v ".test." || true)
          MISSING_TESTS=""
          
          for file in $CHANGED_SRC; do
            TEST_FILE="${file%.ts}.test.ts"
            TEST_FILE2="${file%.svelte}.test.ts"
            if ! git diff --name-only origin/${{ github.base_ref }}...HEAD | grep -qE "$TEST_FILE|$TEST_FILE2"; then
              MISSING_TESTS="$MISSING_TESTS\n- $file"
            fi
          done
          
          if [ -n "$MISSING_TESTS" ]; then
            echo "⚠️ Files changed without corresponding test updates:$MISSING_TESTS" >> change-report.md
          else
            echo "✅ All changed files have corresponding test updates" >> change-report.md
          fi
          
          # Check for breaking changes
          echo "### Breaking Change Detection:" >> change-report.md
          BREAKING_PATTERNS="export.*function.*\(|export.*interface|export.*type|export.*class"
          if git diff origin/${{ github.base_ref }}...HEAD | grep -E "^-.*($BREAKING_PATTERNS)"; then
            echo "⚠️ Potential breaking changes detected (removed exports)" >> change-report.md
            git diff origin/${{ github.base_ref }}...HEAD | grep -E "^-.*($BREAKING_PATTERNS)" | head -10 >> change-report.md
          else
            echo "✅ No obvious breaking changes detected" >> change-report.md
          fi
          
      - name: Upload change report
        uses: actions/upload-artifact@v4
        with:
          name: change-analysis
          path: pr/change-report.md

  size-check:
    name: Bundle Size Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
          path: base
          
      - name: Checkout PR branch  
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          
      - name: Build base branch
        run: |
          cd base
          pnpm install --no-frozen-lockfile
          pnpm build
          du -sh .svelte-kit/output/client > ../base-size.txt
          
      - name: Build PR branch
        run: |
          cd pr
          pnpm install --no-frozen-lockfile
          pnpm build
          du -sh .svelte-kit/output/client > ../pr-size.txt
          
      - name: Compare sizes
        run: |
          echo "## 📦 Bundle Size Comparison" > size-report.md
          echo "Base: $(cat base-size.txt)" >> size-report.md
          echo "PR: $(cat pr-size.txt)" >> size-report.md
          
          # Calculate percentage change
          BASE_SIZE=$(cat base-size.txt | awk '{print $1}' | sed 's/[^0-9.]//g')
          PR_SIZE=$(cat pr-size.txt | awk '{print $1}' | sed 's/[^0-9.]//g')
          
          if (( $(echo "$PR_SIZE > $BASE_SIZE * 1.1" | bc -l) )); then
            echo "⚠️ Bundle size increased by more than 10%" >> size-report.md
          else
            echo "✅ Bundle size change is acceptable" >> size-report.md
          fi
          
      - name: Post size report
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('size-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

  final-status:
    name: PR Validation Summary
    runs-on: ubuntu-latest
    needs: [danger-checks, validate-changes, size-check]
    if: always()
    
    steps:
      - name: Download all reports
        uses: actions/download-artifact@v4
        with:
          path: reports
          
      - name: Generate final summary
        run: |
          echo "# 🔍 Pull Request Validation Summary" > summary.md
          echo "" >> summary.md
          
          # Add status badges
          echo "## Status Checks" >> summary.md
          echo "| Check | Status |" >> summary.md
          echo "|-------|--------|" >> summary.md
          echo "| Danger Checks | ${{ needs.danger-checks.result }} |" >> summary.md
          echo "| Change Validation | ${{ needs.validate-changes.result }} |" >> summary.md
          echo "| Bundle Size | ${{ needs.size-check.result }} |" >> summary.md
          echo "" >> summary.md
          
          # Add recommendations
          echo "## Recommendations" >> summary.md
          if [[ "${{ needs.danger-checks.result }}" == "failure" ]]; then
            echo "- ⚠️ Please address the danger zone findings" >> summary.md
          fi
          if [[ "${{ needs.validate-changes.result }}" == "failure" ]]; then
            echo "- ⚠️ Please ensure all code changes have corresponding tests" >> summary.md
          fi
          if [[ "${{ needs.size-check.result }}" == "failure" ]]; then
            echo "- ⚠️ Please review the bundle size increase" >> summary.md
          fi
          
          if [[ "${{ needs.danger-checks.result }}" == "success" ]] && [[ "${{ needs.validate-changes.result }}" == "success" ]] && [[ "${{ needs.size-check.result }}" == "success" ]]; then
            echo "✅ All checks passed! This PR is ready for review." >> summary.md
          else
            echo "❌ Some checks require attention before this PR can be merged." >> summary.md
          fi
          
      - name: Post final summary
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('summary.md', 'utf8');
            
            // Find and update existing summary comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Pull Request Validation Summary')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: summary
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: summary
              });
            }