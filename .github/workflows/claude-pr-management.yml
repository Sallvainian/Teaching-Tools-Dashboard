name: Claude PR Management

on:
  pull_request:
    types: [opened, ready_for_review]
    branches: [main]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
      checks: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest


      - name: PR Analysis and Validation
        id: pr-analysis
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            This pull request has been opened for review. Please perform comprehensive validation:
            
            **PR Information:**
            - Title: ${{ github.event.pull_request.title }}
            - Description: ${{ github.event.pull_request.body }}
            - Author: ${{ github.event.pull_request.user.login }}
            - Files changed: ${{ github.event.pull_request.changed_files }}
            
            **Validation Checklist:**
            
            1. **PR Title & Description Quality**
               - Is the title descriptive and follows conventions?
               - Does the description explain what, why, and how?
               
            2. **Code Quality Checks**
               - Run linting and type checking
               - Verify Svelte 5 compliance (proper runes usage)
               - Check for TypeScript strict mode compliance
               
            3. **Architecture Compliance**
               - Follows patterns outlined in CLAUDE.md
               - Proper use of stores and service layer
               - Consistent with existing component structure
               
            4. **Testing Requirements**
               - Are tests needed for these changes?
               - Do existing tests still pass?
               
            5. **Security Review**
               - No hardcoded secrets or API keys
               - Proper Supabase RLS usage
               - Safe handling of user input
               
            6. **Performance Impact**
               - Check for potential performance issues
               - Proper lazy loading and optimization
               
            Provide a summary with specific recommendations and any blocking issues.
          allowed_tools: "Bash(pnpm install),Bash(pnpm lint),Bash(pnpm check),Bash(pnpm test),Bash(git diff --name-only HEAD~1),View,GlobTool,GrepTool"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: 20

      - name: Post PR Analysis
        if: steps.pr-analysis.outputs.conclusion == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const executionFile = '${{ steps.pr-analysis.outputs.execution_file }}';
            const executionLog = JSON.parse(fs.readFileSync(executionFile, 'utf8'));
            
            let analysis = '';
            for (let i = executionLog.length - 1; i >= 0; i--) {
              if (executionLog[i].role === 'assistant') {
                analysis = executionLog[i].content;
                break;
              }
            }
            
            if (analysis) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## ðŸ“‹ PR Validation Report\n\n${analysis}\n\n---\n*Generated by Claude Code Assistant*`
              });
            }

      - name: Set PR Status
        if: steps.pr-analysis.outputs.conclusion == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'failure',
              context: 'claude/pr-validation',
              description: 'PR validation failed - check Claude analysis'
            });