name: Claude Issue Triage

on:
  issues:
    types: [opened]
  
jobs:
  triage-issue:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Analyze Issue with Claude
        id: triage
        uses: anthropics/claude-code-base-action@beta
        with:
          prompt: |
            Please analyze this newly opened issue and provide triage recommendations:
            
            **Issue Title:** ${{ github.event.issue.title }}
            **Issue Body:** ${{ github.event.issue.body }}
            **Author:** ${{ github.event.issue.user.login }}
            
            Please provide:
            1. **Category Classification** (bug, feature request, documentation, enhancement, etc.)
            2. **Priority Assessment** (high, medium, low) with reasoning
            3. **Complexity Estimate** (simple, medium, complex)
            4. **Suggested Labels** (specific labels to apply)
            5. **Initial Analysis** (understanding of the issue and potential approaches)
            6. **Questions for Clarification** (if any information is missing)
            7. **Related Components** (which parts of the codebase this affects)
            
            Base your analysis on the project structure and CLAUDE.md guidelines.
            Be specific and actionable in your recommendations.
          allowed_tools: "View,GlobTool,GrepTool"
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          timeout_minutes: 10

      - name: Post Triage Analysis
        if: steps.triage.outputs.conclusion == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const executionFile = '${{ steps.triage.outputs.execution_file }}';
            const executionLog = JSON.parse(fs.readFileSync(executionFile, 'utf8'));
            
            // Extract the triage analysis from the execution log
            let analysis = '';
            for (let i = executionLog.length - 1; i >= 0; i--) {
              if (executionLog[i].role === 'assistant') {
                analysis = executionLog[i].content;
                break;
              }
            }
            
            if (analysis) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üîç Issue Triage Analysis\n\n${analysis}\n\n---\n*Generated by Claude Code Assistant for initial triage*`
              });
            }